<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[诗人的咸鱼]]></title>
  <subtitle><![CDATA[生活不止有眼前的苟且,还有诗和远方]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://willnewii.github.io/"/>
  <updated>2016-05-04T07:39:57.000Z</updated>
  <id>http://willnewii.github.io/</id>
  
  <author>
    <name><![CDATA[诗人的咸鱼]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[iTerm2 快捷键]]></title>
    <link href="http://willnewii.github.io/20160504/iTerm2-%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://willnewii.github.io/20160504/iTerm2-快捷键/</id>
    <published>2016-05-04T07:39:00.000Z</published>
    <updated>2016-05-04T07:39:57.000Z</updated>
    <content type="html"><![CDATA[<h4 id="编辑">编辑</h4><table>
<thead>
<tr>
<th>action</th>
<th>快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td>到行首</td>
<td>ctrl + a</td>
</tr>
<tr>
<td>到行尾</td>
<td>ctrl + e</td>
</tr>
<tr>
<td>清除当前行</td>
<td>ctrl + u</td>
</tr>
<tr>
<td>清屏1</td>
<td>command + r</td>
</tr>
<tr>
<td>删除当前光标的字符</td>
<td>ctrl + d</td>
</tr>
<tr>
<td>删除光标之前的字符</td>
<td>ctrl + h</td>
</tr>
<tr>
<td>删除光标之前的单词</td>
<td>ctrl + w</td>
</tr>
<tr>
<td>删除到文本末尾</td>
<td>ctrl + k</td>
</tr>
</tbody>
</table>
<h4 id="标签">标签</h4><table>
<thead>
<tr>
<th>action</th>
<th>快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td>新建标签</td>
<td>command + t</td>
</tr>
<tr>
<td>关闭标签</td>
<td>command + w</td>
</tr>
<tr>
<td>切换标签</td>
<td>command + 数字, command + 左右方向键</td>
</tr>
<tr>
<td>切换全屏</td>
<td>command + enter</td>
</tr>
<tr>
<td>查找</td>
<td>command + f</td>
</tr>
</tbody>
</table>
<h4 id="分屏">分屏</h4><table>
<thead>
<tr>
<th>action</th>
<th>快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td>垂直分屏</td>
<td>command + d</td>
</tr>
<tr>
<td>水平分屏</td>
<td>command + shift + d</td>
</tr>
<tr>
<td>切换屏幕</td>
<td>command + option + 方向键 command + [ 或 command + ]</td>
</tr>
</tbody>
</table>
<h4 id="其他">其他</h4><table>
<thead>
<tr>
<th>action</th>
<th>快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td>前进后退</td>
<td>ctrl + f/b (相当于左右方向键)</td>
</tr>
<tr>
<td>上一条命令</td>
<td>ctrl + p</td>
</tr>
<tr>
<td>搜索命令历史</td>
<td>ctrl + r</td>
</tr>
<tr>
<td>交换光标处文本</td>
<td>ctrl + t</td>
</tr>
<tr>
<td>清屏2</td>
<td>ctrl + l</td>
</tr>
<tr>
<td>查看历史命令</td>
<td>command + ;</td>
</tr>
<tr>
<td>查看剪贴板历史</td>
<td>command + shift + h</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="编辑">编辑</h4><table>
<thead>
<tr>
<th>action</th>
<th>快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td>到行首</td>
<td>ctrl + a</td>
</tr>
<tr>
<]]>
    </summary>
    
      <category term="快捷键" scheme="http://willnewii.github.io/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[seajs 资源]]></title>
    <link href="http://willnewii.github.io/20160416/seajs-%E8%B5%84%E6%BA%90/"/>
    <id>http://willnewii.github.io/20160416/seajs-资源/</id>
    <published>2016-04-16T03:57:32.000Z</published>
    <updated>2016-04-16T06:50:10.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p><a href="https://github.com/seajs/seajs/issues/242" target="_blank" rel="external">CMD 模块定义规范</a></p>
</li>
<li><p><a href="https://github.com/seajs/seajs/issues/258" target="_blank" rel="external">模块标识</a></p>
</li>
<li><p><a href="https://github.com/seajs/seajs/issues/263" target="_blank" rel="external">Sea.js 的调试接口</a></p>
</li>
<li><p><a href="https://github.com/seajs/seajs/issues/262" target="_blank" rel="external">配置</a></p>
</li>
<li><p><a href="https://github.com/seajs/seajs/issues/971" target="_blank" rel="external">如何改造现有文件为 CMD 模块</a></p>
</li>
<li><p><a href="http://seajs.org/docs/#docs" target="_blank" rel="external">文档…</a></p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p><a href="https://github.com/seajs/seajs/issues/242" target="_blank" rel="external">CMD 模块定义规范</a></p>
</li>
<li><p><a href="http]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[android 开发问题]]></title>
    <link href="http://willnewii.github.io/20160331/android-%E9%97%AE%E9%A2%98/"/>
    <id>http://willnewii.github.io/20160331/android-问题/</id>
    <published>2016-03-31T04:12:55.000Z</published>
    <updated>2016-03-31T04:15:00.000Z</updated>
    <content type="html"><![CDATA[<h4 id="webview_切后台,再回来_无焦点(不弹软键盘)">webview 切后台,再回来 无焦点(不弹软键盘)</h4><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">setOnTouchListener(<span class="keyword">new</span> OnTouchListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">switch</span> (event.getAction ()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> MotionEvent.ACTION_DOWN :</span><br><span class="line">                    <span class="keyword">case</span> MotionEvent.ACTION_UP :</span><br><span class="line">                        <span class="keyword">if</span> (!v.hasFocus()) &#123;</span><br><span class="line">                            v.setFocusableInTouchMode(<span class="keyword">true</span>);</span><br><span class="line">                            <span class="comment">//v.setFocusable(true);</span></span><br><span class="line">                            <span class="comment">//v.requestFocus ();</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<h4 id="微信分享_提示_hit_push_hold！！！">微信分享 提示 hit push hold！！！</h4><p>原因是你分享的微信账号在其他手机登陆了，但是本机还没有退出登陆，导致没有权限分享。重新进入微信并登陆就好了。</p>
<h4 id="webview_error提示_net::ERR_CACHE_MISS">webview error提示 net::ERR_CACHE_MISS</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">19</span>) &#123;</span><br><span class="line"> 	mWebView.getSettings().setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h4 id="webview_切后台,再回来_无焦点(不弹软键盘)">webview 切后台,再回来 无焦点(不弹软键盘)</h4><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><spa]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[储倩 设计 作品]]></title>
    <link href="http://willnewii.github.io/20160314/%E5%80%A9%E5%80%A9Design/"/>
    <id>http://willnewii.github.io/20160314/倩倩Design/</id>
    <published>2016-03-14T04:23:12.000Z</published>
    <updated>2016-03-28T16:07:05.000Z</updated>
    <content type="html"><![CDATA[<h3 id="APP下载w">APP下载w</h3><h3 id="APP设计">APP设计</h3><ul>
<li><a href="https://modao.cc/app/Vz8GZZGNw4ohPxr10Z4w" target="_blank" rel="external">尼玛去哪儿之台湾</a></li>
<li><a href="https://modao.cc/app/yoalEe1zV2KCjlybyC0b" target="_blank" rel="external">好车贷</a></li>
<li><a href="https://modao.cc/app/fg8BDPcGugf051KhN6Wh15n0W7fyzW9" target="_blank" rel="external">MayDay歌词本2.0</a></li>
</ul>
<h3 id="icon设计">icon设计</h3><ul>
<li>中国风<br>  <img src="http://ww2.sinaimg.cn/large/6482edf0gw1f1wa02a5tlj20ku1vw4qp.jpg" alt="2"></li>
<li>简·净<br>  <img src="http://ww3.sinaimg.cn/large/6482edf0gw1f1w9zxvsrwj21732pg4eb.jpg" alt="3"></li>
</ul>
<h3 id="banner">banner</h3><p><img src="http://ww4.sinaimg.cn/large/6482edf0gw1f1wa09g2maj21cy3uyhdu.jpg" alt="1"></p>
<h3 id="手绘">手绘</h3><p><img src="http://ww3.sinaimg.cn/large/6482edf0gw1f1w9zza5lbj21kw1kw13w.jpg" alt="4"><br><img src="http://ww4.sinaimg.cn/large/6482edf0gw1f2cgqfv9w9j21ji1ji16h.jpg" alt="5"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="APP下载w">APP下载w</h3><h3 id="APP设计">APP设计</h3><ul>
<li><a href="https://modao.cc/app/Vz8GZZGNw4ohPxr10Z4w" target="_blank" rel="extern]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[持续集成 应用-1]]></title>
    <link href="http://willnewii.github.io/20160313/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90-%E5%BA%94%E7%94%A81/"/>
    <id>http://willnewii.github.io/20160313/持续集成-应用1/</id>
    <published>2016-03-13T09:14:00.000Z</published>
    <updated>2016-03-14T06:50:34.000Z</updated>
    <content type="html"><![CDATA[<h4 id="引子">引子</h4><p>　　现在的工作环境,代码基本处于私有状态,利用起来的只有开发组.测试人员就算可以访问,也没有实质性的应用.打个包…连个真机看个log…你他妈不会么..<br>　　最近在看git工作流的相关应用,了解到持续集成方面的应用.恰好能解决这方面的问题.</p>
<h4 id="什么是持续集成">什么是持续集成</h4><p>　　持续集成是一种软件开发实践，即团队开发成员经常集成他们的工作，通常每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试)来验证，从而尽快地发现集成错误。许多团队发现这个过程可以大大减少集成的问题，让团队能够更快的开发内聚的软件。<br>　　高大上的答案,来自百度…</p>
<h4 id="说说工作上的场景">说说工作上的场景</h4><ul>
<li><p>啥时候发新包<br>在测试阶段,当进行一轮测试后,测试人员就要等着发新包.</p>
<ul>
<li>这是一个被动行为.如果开发人员不推进,测试人员将永远处于等待状态.(为什么测试人员不去搭建一个编译环境…)</li>
<li>大家都有一种”默契”,代码相关的产出物都应该由开发人员来搞.跟其他人没毛关系</li>
<li>理论上,只要代码库被更新,测试人员就可以进行新的测试,不需要等待开发人员的推进.</li>
</ul>
</li>
<li><p>驱动工作的是代码库<br>　　一直以来,大家习惯的工作流程是确认bug,修改bug,提交代码,编译新包,交付测试.这一切的行为需要开发人员驱动.<br>　　那么让我们试想一下,把这个流程由开发人员驱动,改为代码库驱动.<br>　　以持续集成的方式:当代码库发生变更,系统就要进行集成工作.自动化构建,产生新包,供测试人员测试.在这个过程中开发人员不需要与测试人员进行沟通,一切由代码库驱动.<br>　　(发散一下,我们使用的mantis,其实跟代码也没有关系.而github的issue,则是紧密围绕代码产生和关闭的.)</p>
</li>
</ul>
<h4 id="当前实现效果(使用jenkins构建android应用)">当前实现效果(使用jenkins构建android应用)</h4><p>　　当代码库更新后,相关人员进入jenkins后台,执行build操作即可.当build成功后,jenkins会发邮件通知相关工作人员任务状态.如果构建成功,测试人员下载新包,即可进行测试.<br>　　开发人员的工作是修复bug,提交代码.测试,上线,打渠道包的一系列构建任务都可以交给jenkins完成.</p>
<h4 id="TODO">TODO</h4><ul>
<li>通过hooks,当版本库发生变化,自动通知jenkins构建新版本</li>
<li>通过区分branch,可以实现构建不同版本的包.你爱测那个测那个…</li>
<li>自动化测试…</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="引子">引子</h4><p>　　现在的工作环境,代码基本处于私有状态,利用起来的只有开发组.测试人员就算可以访问,也没有实质性的应用.打个包…连个真机看个log…你他妈不会么..<br>　　最近在看git工作流的相关应用,了解到持续集成方面的应用.恰好能解决这方面]]>
    </summary>
    
      <category term="工作流程" scheme="http://willnewii.github.io/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git小结]]></title>
    <link href="http://willnewii.github.io/20160309/Git%E5%B0%8F%E7%BB%93/"/>
    <id>http://willnewii.github.io/20160309/Git小结/</id>
    <published>2016-03-09T07:27:00.000Z</published>
    <updated>2016-03-14T06:47:07.000Z</updated>
    <content type="html"><![CDATA[<h4 id="什么是版本控制">什么是版本控制</h4><p>　　版本控制透过文档控制（documentation control）记录程序各个模组的改动，并为每次改动编上序号。这种方法是工程图（engineering drawings）维护（maintenance）的标准做法， 它伴随着工程图从图的诞生一直到图的定型。 一种简单的版本控制形式，例如，赋给图的初版一个版本等级“A”。当做了第一次改变后，版本等级改为“B”，以此类推等等。</p>
<h4 id="什么是Git">什么是Git</h4><p>　　Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。</p>
<ul>
<li>集中式 分布式</li>
<li>代码库的每份拷贝都带有完整的数据库，用户可以在本地修改、提交代码</li>
<li>分支…分支…分支…重要的事情说三遍</li>
</ul>
<h3 id="为什么是git">为什么是git</h3><ul>
<li>google code关闭了…</li>
<li>github是全球最大的同性交友网站…</li>
<li>看看你使用的开源项目都托管在哪里?</li>
<li>分支…分支…分支…重要的事情说三遍</li>
</ul>
<h3 id="提交方式">提交方式</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">svn <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">'svn提交'</span> //加入版本库&amp;提交服务器</span><br><span class="line"></span><br><span class="line">git <span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">'git提交'</span> //加入本地版本库</span><br><span class="line">git push origin <span class="keyword">master</span> //提交到远程分支</span></span><br></pre></td></tr></table></figure>
<h3 id="branch">branch</h3><p>　　Git的分支相比SVN要轻量很多.Git的分支只是指针,并没有将仓库进行复制,每次提交都会让当前的分支向后移动,指向最后一次提交的对象.当你在切换分支时,Git也只是改变指向当前所在分支的特殊指针HEAD,所以可以快速地在各个分支之间进行切换.</p>
<p>　　简单、快速</p>
<h3 id="gitflow">gitflow</h3><p><img src="/img/gitflow.png" alt="GitHub Octocat"></p>
<h3 id="工作流程">工作流程</h3><ul>
<li>永久性分支<ul>
<li>master分支<br>存放的是随时可供在生产环境中部署的代码.当开发活动告一段落，产生了一份新的可供部署的代码时，master分支上的代码会被更新。同时,每一次更新,最好添加对应的版本号标签（TAG）。</li>
<li>develop分支<br>保存当前最新开发成果的分支。当develop分支上的代码已实现本次更新的所有功能，并通过了所有的测试后，且代码已经足够稳定时，就可以将所有的开发成果合并回master分支了</li>
</ul>
</li>
<li>临时性分支<ul>
<li>topic分支<br>修改bug,实验性,优化,更新控件</li>
<li>一对一<br>按模块分配任务.大家以dev分支为基础,创建各自私有分支（一对一）,进行开发.这个过程中是对其他人不可见,这样在开发过程中不会污染dev分支,出现dev分支不可用的状态.</li>
<li>一对多<br>如果有交叉任务,可以创建一个topic分支（多对一）,指定多名人员维护开发.</li>
</ul>
</li>
</ul>
<h3 id="持续集成">持续集成</h3><p><a href="http://10.101.26.196:8080/job/build-android/" target="_blank" rel="external">http://10.101.26.196:8080/job/build-android/</a></p>
<h3 id="rebase_衍合/变基">rebase 衍合/变基</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="command">log</span> <span class="comment">--pretty=oneline</span></span><br><span class="line">git rebase -i (你需要合并的commints的前一个commit哈希值)</span><br></pre></td></tr></table></figure>
<h3 id="其它">其它</h3><ul>
<li>git log</li>
<li>stash</li>
<li>markdown</li>
</ul>
<h4 id="资料">资料</h4><ul>
<li><p>基础知识</p>
<ul>
<li><a href="http://backlogtool.com/git-guide/cn/" target="_blank" rel="external">猴子都能看懂的git入门</a></li>
<li><a href="http://www.cnblogs.com/gbyukg/archive/2011/12/12/2285419.html" target="_blank" rel="external">git log 参数</a></li>
</ul>
</li>
<li><p>工作流</p>
<ul>
<li><a href="http://www.ituring.com.cn/article/56870" target="_blank" rel="external">基于git的源代码管理模型——git flow</a></li>
<li><a href="https://coding.net/help/doc/git/git-branch.html" target="_blank" rel="external">coding-Git分支管理</a></li>
<li><a href="https://github.com/geeeeeeeeek/git-recipes/wiki/3.5-%E5%B8%B8%E8%A7%81%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%AF%94%E8%BE%83" target="_blank" rel="external">常见工作流比较</a></li>
</ul>
</li>
<li><p>进阶</p>
<ul>
<li><a href="http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html" target="_blank" rel="external">Commit message和Change log编写指南</a></li>
<li><a href="http://blog.fir.im/fir-im-practicesguide4/" target="_blank" rel="external">http://blog.fir.im/fir-im-practicesguide4/</a></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="什么是版本控制">什么是版本控制</h4><p>　　版本控制透过文档控制（documentation control）记录程序各个模组的改动，并为每次改动编上序号。这种方法是工程图（engineering drawings）维护（maintenance）的标准做法]]>
    </summary>
    
      <category term="工作流程" scheme="http://willnewii.github.io/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ES6笔记]]></title>
    <link href="http://willnewii.github.io/20160215/ES6-%E8%B5%84%E6%BA%90/"/>
    <id>http://willnewii.github.io/20160215/ES6-资源/</id>
    <published>2016-02-15T02:47:00.000Z</published>
    <updated>2016-02-17T10:21:01.000Z</updated>
    <content type="html"><![CDATA[<h4 id="笔记">笔记</h4><ul>
<li>Arrow Function<br><br>当我们使用箭头函数时，函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。<br>并不是因为箭头函数内部有绑定this的机制，实际原因是箭头函数根本没有自己的this，它的this是继承外面的，因此内部的this就是外层代码块的this。</li>
</ul>
<h4 id="教程">教程</h4><ul>
<li><p><a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">ECMAScript 6入门 - 阮一峰的…</a></p>
</li>
<li><p><a href="https://segmentfault.com/a/1190000004365693" target="_blank" rel="external">30分钟掌握ES6/ES2015核心内容（上）</a></p>
</li>
<li><p><a href="https://segmentfault.com/a/1190000004368132" target="_blank" rel="external">30分钟掌握ES6/ES2015核心内容（下）</a></p>
</li>
<li><p><a href="http://base-n.github.io/koa-generator-examples/node4/classes.html" target="_blank" rel="external">一起学koa</a></p>
</li>
</ul>
<h4 id="hello_world">hello world</h4><ul>
<li><a href="https://segmentfault.com/a/1190000004394726?utm_source=APP&amp;utm_medium=iOS&amp;utm_campaign=socialShare" target="_blank" rel="external">使用ES6开发流程</a></li>
<li><a href="http://www.es6fiddle.net/" target="_blank" rel="external">运行es6代码的网站</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="笔记">笔记</h4><ul>
<li>Arrow Function<br><br>当我们使用箭头函数时，函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象。<br>并不是因为箭头函数内部有绑定this的机制，实际原因是箭头函数根本没有自己的th]]>
    </summary>
    
      <category term="ES6" scheme="http://willnewii.github.io/tags/ES6/"/>
    
      <category term="前端" scheme="http://willnewii.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git笔记]]></title>
    <link href="http://willnewii.github.io/20160120/git/"/>
    <id>http://willnewii.github.io/20160120/git/</id>
    <published>2016-01-20T03:47:00.000Z</published>
    <updated>2016-01-25T07:50:06.000Z</updated>
    <content type="html"><![CDATA[<h4 id="git移除某文件夹的版本控制">git移除某文件夹的版本控制</h4><p>thinkphp框架，Apps/Runtime下目录移出版本控制.<br>git rm -r -n –cached  <em>/Runtime/\</em>      //-n：加上这个参数，执行命令时，是不会删除任何文件，而是展示此命令要删除的文件列表预览。</p>
<p>git rm -r –cached  <em>/Runtime/\</em>      //最终执行命令.</p>
<p>git commit -m”移除Runtime目录下所有文件的版本控制”    //提交</p>
<p>git push origin master   //提交到远程服务器</p>
<p>若用git status命令查看，则Apps/Runtime/目录下文件出现在结果列表里， 我们不希望这个目录下的文件出现，则在项目根目录下，和.git 同级目录下，新建一个.gitignore文件，<br>把.gitignore提交到远程服务器。 则.Apps/Runtime目录就不会被提交了。</p>
<h4 id="git_am">git am</h4><p>git am –abort</p>
<h4 id="git_flow">git flow</h4><p><a href="http://blog.jobbole.com/76867/" target="_blank" rel="external">http://blog.jobbole.com/76867/</a></p>
<h4 id="git_常用指令">git 常用指令</h4><p><a href="http://stormzhang.com/git/2014/01/27/git-common-command/" target="_blank" rel="external">http://stormzhang.com/git/2014/01/27/git-common-command/</a></p>
<h4 id="git_submodule的使用">git submodule的使用</h4><p><a href="http://www.stormzhang.com/git/2014/02/13/git-submodule/" target="_blank" rel="external">http://www.stormzhang.com/git/2014/02/13/git-submodule/</a></p>
<h4 id="git_文档">git 文档</h4><ul>
<li><p><a href="http://git-scm.com/book/zh/v2" target="_blank" rel="external">Pro Git 中文版(推荐)</a></p>
</li>
<li><p><a href="http://www.juvenxu.com/2010/11/28/a-successful-git-branching-model/" target="_blank" rel="external">一个成功的Git分支模型(推荐)</a></p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2012/07/git.html" target="_blank" rel="external">Git分支管理策略</a></p>
</li>
<li><p><a href="http://pic002.cnblogs.com/img/1-2-3/201007/2010072023345292.png" target="_blank" rel="external">Git 常用命令图</a></p>
</li>
<li><p><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="external">git - 简明指南</a></p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="git移除某文件夹的版本控制">git移除某文件夹的版本控制</h4><p>thinkphp框架，Apps/Runtime下目录移出版本控制.<br>git rm -r -n –cached  <em>/Runtime/\</em>      //-n：加上这个参]]>
    </summary>
    
      <category term="笔记" scheme="http://willnewii.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JS笔记]]></title>
    <link href="http://willnewii.github.io/20160120/JS%E7%AC%94%E8%AE%B0/"/>
    <id>http://willnewii.github.io/20160120/JS笔记/</id>
    <published>2016-01-20T03:37:00.000Z</published>
    <updated>2016-04-16T09:50:10.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p><a href="http://www.jb51.net/article/55364.htm" target="_blank" rel="external">JS合并数组的几种方法及优劣比较</a></p>
</li>
<li><p><a href="http://www.cnblogs.com/tianguook/archive/2010/09/30/1839648.html" target="_blank" rel="external">JS中数组的操作</a></p>
</li>
<li><p><a href="http://www.cnblogs.com/onlys/articles/jQuery.html" target="_blank" rel="external">jQuery选择器总结</a><br>###比较</p>
<h4 id="1-===">1.===</h4><p>要特别注意相等运算符==。JavaScript在设计时，有两种比较运算符：</p>
</li>
</ul>
<p>第一种是==比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果；</p>
<p>第二种是===比较，它不会自动转换数据类型，如果数据类型不一致，返回false，如果一致，再比较。</p>
<p>由于JavaScript这个设计缺陷，不要使用==比较，始终坚持使用===比较。</p>
<h4 id="2-NaN">2.NaN</h4><p>另一个例外是NaN这个特殊的Number与所有其他值都不相等，包括它自己：</p>
<pre><code><span class="literal">NaN</span> === <span class="literal">NaN</span>; <span class="comment">// false</span>
</code></pre><p>唯一能判断NaN的方法是通过isNaN()函数：</p>
<pre><code><span class="built_in">isNaN</span>(<span class="literal">NaN</span>); <span class="comment">// true</span>
</code></pre><h4 id="3-浮点数的相等比较">3.浮点数的相等比较</h4><pre><code><span class="number">1</span> / <span class="number">3</span> === (<span class="number">1</span> - <span class="number">2</span> / <span class="number">3</span>); <span class="comment">// false</span>
</code></pre><p>这不是JavaScript的设计缺陷。浮点数在运算过程中会产生误差，因为计算机无法精确表示无限循环小数。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值：</p>
<pre><code>Math.<span class="built_in">abs</span>(<span class="number">1</span> / <span class="number">3</span> - (<span class="number">1</span> - <span class="number">2</span> / <span class="number">3</span>)) &lt; <span class="number">0.0000001</span>; <span class="comment">// true</span>
</code></pre><p>####变量&amp;函数<br>这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言</p>
<ol>
<li>如果一个变量没有通过var申明就被使用，那么该变量就自动被申明为全局变量</li>
<li>JavaScript的函数定义有个特点，它会先扫描整个函数体的语句，把所有申明的变量“提升”到函数顶部：</li>
<li>apply &amp; call</li>
<li>编写高阶函数，就是让函数的参数能够接收别的函数。</li>
</ol>
<p>#####闭包<br>我们在函数lazy_sum中又定义了函数sum，并且，内部函数sum可以引用外部函数lazy_sum的参数和局部变量，当lazy_sum返回函数sum时，相关参数和变量都保存在返回的函数中，这种称为“闭包（Closure）”的程序结构拥有极大的威力。</p>
<p>返回闭包时牢记的一点就是：返回函数不要引用任何循环变量，或者后续会发生变化的变量。</p>
<p>在面向对象的程序设计语言里，比如Java和C++，要在对象内部封装一个私有变量，可以用private修饰一个成员变量。<br>在没有class机制，只有函数的语言里，借助闭包，同样可以封装一个私有变量。：</p>
<p>####严格模式</p>
<p>启用strict模式的方法是在JavaScript代码的第一行写上：</p>
<pre><code><span class="pi">'use strict'</span>;
</code></pre><p>这是一个字符串，不支持strict模式的浏览器会把它当做一个字符串语句执行，支持strict模式的浏览器将开启strict模式运行JavaScript。</p>
<p>###复制数组<br>    var arr = [‘A’, ‘B’, ‘C’, ‘D’, ‘E’, ‘F’, ‘G’];<br>    var aCopy = arr.slice();<br>    aCopy; // [‘A’, ‘B’, ‘C’, ‘D’, ‘E’, ‘F’, ‘G’]<br>    aCopy === arr; // false</p>
<p>###Object<br>如果我们要检测xiaoming是否拥有某一属性，可以用in操作符：</p>
<pre><code><span class="string">'toString'</span> <span class="keyword">in</span> xiaoming; <span class="regexp">//</span> <span class="keyword">true</span>
</code></pre><p>要判断一个属性是否是xiaoming自身拥有的，而不是继承得到的，可以用hasOwnProperty()方法：</p>
<pre><code>var xiaoming = {
    <span class="symbol">name:</span> <span class="string">'小明'</span>
};
xiaoming.hasOwnProperty(<span class="string">'name'</span>); <span class="regexp">//</span> <span class="keyword">true</span>
xiaoming.hasOwnProperty(<span class="string">'toString'</span>); <span class="regexp">//</span> <span class="keyword">false</span>
</code></pre><p>###判断<br>JavaScript把null、undefined、0、NaN和空字符串’’视为false，其他值一概视为true，因此上述代码条件判断的结果是true。            </p>
<p>###this<br>要保证this指向正确，必须用obj.xxx()的形式调用！</p>
<p>###对象<br>JavaScript对每个创建的对象都会设置一个原型，指向它的原型对象。</p>
<p>当我们用obj.xxx访问一个对象的属性时，JavaScript引擎先在当前对象上查找该属性，如果没有找到，就到其原型对象上找，如果还没有找到，就一直上溯到Object.prototype对象，最后，如果还没有找到，就只能返回undefined。</p>
<p>注意，如果不写new，这就是一个普通函数，它返回undefined。但是，如果写了new，它就变成了一个构造函数，它绑定的this指向新创建的对象，并默认返回this，也就是说，不需要在最后写return this;。</p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p><a href="http://www.jb51.net/article/55364.htm" target="_blank" rel="external">JS合并数组的几种方法及优劣比较</a></p>
</li>
<li><p><a href="ht]]>
    </summary>
    
      <category term="js" scheme="http://willnewii.github.io/tags/js/"/>
    
      <category term="前端" scheme="http://willnewii.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Charles]]></title>
    <link href="http://willnewii.github.io/20160113/Charles/"/>
    <id>http://willnewii.github.io/20160113/Charles/</id>
    <published>2016-01-13T06:51:00.000Z</published>
    <updated>2016-01-13T07:37:22.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li><p>安装SSL证书 <a href="http://www.charlesproxy.com/ssl.zip" target="_blank" rel="external">链接</a></p>
</li>
<li><p><a href="http://www.tuicool.com/articles/UzIzIne" target="_blank" rel="external">使用Charles抓包并篡改返回数据</a></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li><p>安装SSL证书 <a href="http://www.charlesproxy.com/ssl.zip" target="_blank" rel="external">链接</a></p>
</li>
<li><p><a href="http://www]]>
    </summary>
    
      <category term="软件" scheme="http://willnewii.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Kindle & Calibre]]></title>
    <link href="http://willnewii.github.io/20160106/Kindle-Calibre/"/>
    <id>http://willnewii.github.io/20160106/Kindle-Calibre/</id>
    <published>2016-01-06T12:01:00.000Z</published>
    <updated>2016-01-13T06:50:39.000Z</updated>
    <content type="html"><![CDATA[<h4 id="编写Recipe">编写Recipe</h4><ol>
<li><p>html结构良好</p>
<p> 可根据Beautiful Soup提供的api,很容易就能找到你需要的相关节点.</p>
</li>
<li><p>html坏标签</p>
<p> 在解析新浪博客的时候出现了返回soup找不到子节点的问题</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">soup = <span class="keyword">self</span>.index_to_soup(<span class="keyword">self</span>.url)</span><br><span class="line">divs = soup.findAll(<span class="string">'div'</span>, &#123;<span class="string">'class'</span>: <span class="string">'module-categories module'</span>&#125;)</span><br><span class="line"><span class="keyword">print</span> len(divs)</span><br><span class="line"><span class="comment"># 0</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>这个时候你可以打印一下soup的len.有可能就是html中有坏标签导致解析异常.所以bs只能当做String直接返回.这时你就只能靠正则,或者练练String操作的基本功啦😜,把你想要的内容截取出来.</p>
<h4 id="BasicNewsRecipe_变量">BasicNewsRecipe 变量</h4><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>电子书标题</td>
</tr>
<tr>
<td>description</td>
<td>电子书描述</td>
</tr>
<tr>
<td>cover_url</td>
<td>电子书的封面图片  </td>
</tr>
<tr>
<td>url_prefix</td>
<td>这是我自用的属性，是内容页面的前缀，用于后面拼装内容页的完整url</td>
</tr>
<tr>
<td>no_stylesheets</td>
<td>不要使用页面CSS样式</td>
</tr>
<tr>
<td>auto_cleanup</td>
<td>开启该选项自动清理正文内容</td>
</tr>
<tr>
<td>keep_only_tags</td>
<td>有时自动解析出来的文章内容是不对的.你可以之前文章的正文范围.</td>
<td>[{ ‘class’: ‘hentry’ }]</td>
</tr>
<tr>
<td>delay</td>
<td>延迟下载？</td>
<td>没有验证</td>
</tr>
<tr>
<td>simultaneous_downloads</td>
<td>下载线程数</td>
<td>有些网站/blog可能对爬出做了限制,这样你就可以通过这两个参数做一些调整.</td>
</tr>
</tbody>
</table>
<h4 id="BasicNewsRecipe_函数">BasicNewsRecipe 函数</h4><table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>articles.reverse()</td>
<td>文章倒序，让其按照时间从前到后排列</td>
</tr>
</tbody>
</table>
<p>parse_index</p>
<h4 id="debug">debug</h4><ul>
<li>ebook-convert<ul>
<li>vv 显示更多的操作信息</li>
<li>test 仅下载两篇文章,并将html的内容输出在debug/input目录下</li>
</ul>
</li>
</ul>
<h4 id="资料">资料</h4><ol>
<li><p>BasicNewsRecipe 万物基础哇~</p>
<p> <a href="http://manual.calibre-ebook.com/news_recipe.html" target="_blank" rel="external">base_news_recipe API</a></p>
</li>
<li><p>示例</p>
<p> <a href="http://www.jianshu.com/p/aeb72b50c20b" target="_blank" rel="external">用calibre抓取乌云知识库并生成电子书</a></p>
<p> <a href="http://blog.codinglabs.org/articles/convert-html-to-kindle-book.html" target="_blank" rel="external">抓取网页内容生成Kindle电子书</a></p>
</li>
<li><p>API</p>
<p> <a href="http://www.crummy.com/software/BeautifulSoup/bs3/documentation.zh.html" target="_blank" rel="external">Beautiful Soup 中文文档</a></p>
<p> <a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/" target="_blank" rel="external">Beautiful Soup 中文文档(这个阅读方便一些)</a></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="编写Recipe">编写Recipe</h4><ol>
<li><p>html结构良好</p>
<p> 可根据Beautiful Soup提供的api,很容易就能找到你需要的相关节点.</p>
</li>
<li><p>html坏标签</p>
<p> 在解析新浪博]]>
    </summary>
    
      <category term="软件" scheme="http://willnewii.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[android dialog]]></title>
    <link href="http://willnewii.github.io/20160106/dialog-fox/"/>
    <id>http://willnewii.github.io/20160106/dialog-fox/</id>
    <published>2016-01-06T10:22:00.000Z</published>
    <updated>2016-01-06T11:51:32.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li>dialog自定义View,弹出键盘</li>
</ol>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE)<span class="comment">;</span></span><br><span class="line">imm.showSoftInput(et_dialog_confirmphoneguardpswd,InputMethodManager.SHOW_IMPLICIT)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<ol>
<li>dialog 触发点击事件,不关闭</li>
</ol>
<p>是通过改变mShowing状态实现的,记得在其他地方修正状态.<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 是否可以关闭对话框</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@param</span> dialog</span><br><span class="line"> * <span class="doctag">@param</span> isCan</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">isCanDismiss</span><span class="params">(DialogInterface dialog, <span class="keyword">boolean</span> isCan)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Field field = dialog.getClass().getSuperclass().getDeclaredField(<span class="string">"mShowing"</span>);</span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        field.set(dialog, isCan);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li>dialog自定义View,弹出键盘</li>
</ol>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span]]>
    </summary>
    
      <category term="android" scheme="http://willnewii.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Flex 布局]]></title>
    <link href="http://willnewii.github.io/20160105/Flex-%E5%B8%83%E5%B1%80/"/>
    <id>http://willnewii.github.io/20160105/Flex-布局/</id>
    <published>2016-01-05T04:17:00.000Z</published>
    <updated>2016-01-13T08:24:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="容器属性">容器属性</h3><ol>
<li><p>flex-direction</p>
<pre><code>属性决定主轴的方向（即项目的排列方向）。
</code></pre><ol>
<li>row（默认值）：主轴为水平方向，起点在左端。</li>
<li>row-reverse：主轴为水平方向，起点在右端。</li>
<li>column：主轴为垂直方向，起点在上沿。</li>
<li>column-reverse：主轴为垂直方向，起点在下沿。<blockquote>
<p>LinearLayout.orientation<br>horizontal-&gt;row,vertical-column</p>
</blockquote>
</li>
</ol>
</li>
<li><p>flex-wrap</p>
<pre><code>默认情况下，项目都排在一条线（又称<span class="string">"轴线"</span>）上。flex-<span class="operator">wrap</span>属性定义，如果一条轴线排不下，如何换行。
</code></pre><ol>
<li>nowrap（默认）：不换行。</li>
<li>wrap：换行，第一行在上方。</li>
<li>wrap-reverse：换行，第一行在下方。</li>
</ol>
</li>
<li><p>flex-flow</p>
<pre><code><span class="attribute">flex-flow</span>属性是<span class="attribute">flex-direction</span>属性和<span class="attribute">flex-wrap</span>属性的简写形式，默认值为row <span class="value">nowrap</span>。
</code></pre></li>
<li><p>justify-content</p>
<pre><code>属性定义了项目在主轴上的对齐方式。
</code></pre><ol>
<li>flex-start（默认值）：左对齐</li>
<li>flex-end：右对齐</li>
<li>center： 居中</li>
<li>space-between：两端对齐，项目之间的间隔都相等。</li>
<li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>
</ol>
</li>
<li><p>align-items</p>
<pre><code>属性定义项目在交叉轴上如何对齐。
</code></pre></li>
<li><p>align-content <strong>5，6没太明白区别在哪里</strong></p>
<pre><code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。
</code></pre><blockquote>
<p>android:gravity </p>
</blockquote>
</li>
</ol>
<h3 id="项目属性">项目属性</h3><ol>
<li>order    default 0<pre><code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为<span class="number">0</span>。
</code></pre></li>
<li><p>flex-grow    default 0</p>
<pre><code>属性定义项目的放大比例，默认为<span class="number">0</span>，即如果存在剩余空间，也不放大。
</code></pre><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p>
<blockquote>
<p>LinearLayout.weight</p>
</blockquote>
</li>
<li><p>flex-shrink  default 1 </p>
<pre><code>属性定义了项目的缩小比例，默认为<span class="number">1</span>，即如果空间不足，该项目将缩小。
</code></pre><p> 如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。</p>
</li>
<li><p>flex-basis</p>
<pre><code>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<span class="keyword">auto</span>，即项目的本来大小。
</code></pre></li>
<li><p>flex default 0 1 auto</p>
<pre><code><span class="attribute">flex</span>属性是<span class="attribute">flex-grow</span>, <span class="attribute">flex-shrink</span> 和 <span class="attribute">flex-basis</span>的简写，默认值为0 1 <span class="attribute">auto</span>。后两个属性可选。
</code></pre></li>
<li><p>align-self</p>
<pre><code><span class="keyword">align</span>-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<span class="keyword">align</span>-items属性。默认值为<span class="keyword">auto</span>，表示继承父元素的<span class="keyword">align</span>-items属性，如果没有父元素，则等同于stretch。
</code></pre><blockquote>
<p>android:layout_gravity</p>
</blockquote>
</li>
</ol>
<h3 id="资料">资料</h3><p><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="external">Flex 布局教程：语法篇</a><br><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="external">Flex 布局教程：实例篇</a><br><a href="http://philipwalton.github.io/solved-by-flexbox/" target="_blank" rel="external">solved-by-flexbox</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="容器属性">容器属性</h3><ol>
<li><p>flex-direction</p>
<pre><code>属性决定主轴的方向（即项目的排列方向）。
</code></pre><ol>
<li>row（默认值）：主轴为水平方向，起点在左端。</li>
<li]]>
    </summary>
    
      <category term="css" scheme="http://willnewii.github.io/tags/css/"/>
    
      <category term="前端" scheme="http://willnewii.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ css定位]]></title>
    <link href="http://willnewii.github.io/20160104/css/"/>
    <id>http://willnewii.github.io/20160104/css/</id>
    <published>2016-01-04T02:54:00.000Z</published>
    <updated>2016-02-17T10:19:37.000Z</updated>
    <content type="html"><![CDATA[<h3 id="CSS_定位_(Positioning)">CSS 定位 (Positioning)</h3><p>div、h1 或 p 元素常常被称为块级元素。这意味着这些元素显示为一块内容，即“块框”。与之相反，span 和 strong 等元素称为“行内元素”，这是因为它们的内容显示在行中，即“行内框”。</p>
<h4 id="display_属性规定元素应该生成的框的类型。">display <strong><em>属性规定元素应该生成的框的类型。</em></strong></h4><pre><code>您可以使用 <span class="attribute">display</span> 属性改变生成的框的类型。这意味着，通过将 <span class="attribute">display</span> 属性设置为 <span class="value">block</span>，可以让行内元素（比如 &lt;<span class="tag">a</span>&gt; 元素）表现得像块级元素一样。还可以通过把 <span class="attribute">display</span> 设置为 <span class="attribute">none</span>，让生成的元素根本没有框。这样的话，该框及其所有内容就不再显示，不占用文档中的空间。
</code></pre><ul>
<li>block-level elements (块级元素)<ul>
<li>block元素通常被现实为独立的一块，会单独换一行；</li>
</ul>
<ol>
<li>常见的块级元素有 DIV, FORM, TABLE, P, PRE, H1~H6, DL, OL, UL 等。</li>
</ol>
</li>
</ul>
<ol>
<li>inline elements (内联元素)<ul>
<li>inline元素则前后不会产生换行，一系列inline元素都在一行内显示，直到该行排满。</li>
</ul>
<ol>
<li>常见的内联元素有 SPAN, A, STRONG, EM, LABEL, INPUT, SELECT, TEXTAREA, IMG, BR 等。</li>
</ol>
</li>
<li>block，inline和inline-block细节对比<ul>
<li>display:block<ol>
<li>block元素会独占一行，多个block元素会各自新起一行。默认情况下，block元素宽度自动填满其父元素宽度。</li>
<li>block元素可以设置width,height属性。块级元素即使设置了宽度,仍然是独占一行。</li>
<li>block元素可以设置margin和padding属性。</li>
</ol>
</li>
</ul>
<ol>
<li>display:inline<ol>
<li>inline元素不会独占一行，多个相邻的行内元素会排列在同一行里，直到一行排列不下，才会新换一行，其宽度随元素的内容而变化。</li>
<li>inline元素设置width,height属性无效。</li>
<li><del>~inline元素的margin和padding属性，水平方向的padding-left, padding-right, margin-left, margin-right都产生边距效果；但竖直方向的padding-top, padding-bottom, margin-top, margin-bottom不会产生边距效果。</del>~</li>
</ol>
</li>
<li>display:inline-block<ol>
<li>简单来说就是将对象呈现为inline对象，但是对象的内容作为block对象呈现。之后的内联对象会被排列在同一行内。比如我们可以给一个link（a元素）inline-block属性值，使其既具有block的宽度高度特性又具有inline的同行特性。</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4 id="position_属性规定元素的定位类型。">position <strong><em>属性规定元素的定位类型。</em></strong></h4><ol>
<li>relative 生成相对定位的元素，相对于其正常位置进行定位。</li>
<li>absolute 生成绝对定位的元素，<strong><em>相对于 static 定位以外的第一个父元素进行定位。将对象从文档流中拖出，使用 left ， right ， top ， bottom 等属性相对于其最接近的一个最有定位设置的父对象进行绝对定位。</em></strong></li>
<li>fixed    生成绝对定位的元素，相对于浏览器窗口进行定位。</li>
<li>static    默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）。</li>
</ol>
<h4 id="overflow_属性规定当内容溢出元素框时发生的事情。">overflow <strong><em>属性规定当内容溢出元素框时发生的事情。</em></strong></h4><ol>
<li>visible 默认值。内容不会被修剪，会呈现在元素框之外。</li>
<li>hidden 内容会被修剪，并且其余内容是不可见的。</li>
<li>scroll 内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。</li>
<li>auto 如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。</li>
<li>inherit 规定应该从父元素继承 overflow 属性的值。</li>
</ol>
<h3 id="float">float</h3><ol>
<li>初衷:为了实现文字环绕 <ol>
<li>浮动会是父元素高度塌陷</li>
<li>清楚浮动带来的影响 </li>
</ol>
</li>
<li>浮动的影响：<ol>
<li>元素block块状化（砖头化）</li>
<li>破坏性造成的紧密排列特性（去空格化）</li>
<li>滥用浮动容易造成砌砖布局，砌砖布局的问题</li>
</ol>
</li>
<li>尽量少使用 float：left来进行布局：<ol>
<li>容错性比较糟糕，容易出问题；</li>
<li>全部用固定尺寸，代码不易重用；</li>
<li>与IE7不兼容；</li>
</ol>
</li>
</ol>
<p>css盒模型</p>
<h4 id="资料">资料</h4><ul>
<li><a href="http://www.cnblogs.com/KeithWang/p/3139517.html" target="_blank" rel="external">block，inline和inline-block概念和区别</a></li>
<li><a href="http://www.w3school.com.cn/cssref/pr_class_position.asp" target="_blank" rel="external">CSS position 属性</a></li>
<li><a href="http://www.5icool.org/a/200912/28.html" target="_blank" rel="external">CSS样式的postion属性absolute和fixed的区别</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="CSS_定位_(Positioning)">CSS 定位 (Positioning)</h3><p>div、h1 或 p 元素常常被称为块级元素。这意味着这些元素显示为一块内容，即“块框”。与之相反，span 和 strong 等元素称为“行内元素”，这是因为它们]]>
    </summary>
    
      <category term="css" scheme="http://willnewii.github.io/tags/css/"/>
    
      <category term="前端" scheme="http://willnewii.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[compass笔记]]></title>
    <link href="http://willnewii.github.io/20151229/compass%E7%AC%94%E8%AE%B0/"/>
    <id>http://willnewii.github.io/20151229/compass笔记/</id>
    <published>2015-12-29T03:57:00.000Z</published>
    <updated>2016-01-05T02:01:23.000Z</updated>
    <content type="html"><![CDATA[<h3 id="知识点">知识点</h3><ol>
<li>require ‘compass/import-once/activate’<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一般生产的config.rb文件头部会有 <span class="built_in">require</span> <span class="string">'compass/import-once/activate'</span>：这个插件的作用是防止sass的 <span class="property">@import</span> 多次引入重复的文件，引入这个插件后即使写多次 <span class="property">@import</span> <span class="string">"aa"</span>,也只会引入一次aa。</span><br><span class="line">      <span class="number">1.</span> 若确实想多次引入aa ，则应写成 <span class="property">@import</span> <span class="string">"aa!"</span> ，末尾添加叹号，则会多次引入。</span><br><span class="line">      <span class="number">2.</span> sass中的<span class="property">@import</span> 会重复引入同一插件。</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>用normalize替换compass内置的的reset</p>
<figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">normalize</span>是compass的插件，<span class="built_in">normalize</span>改良了compass/reset ,统一了跨浏览器差异，而不是都清<span class="number">0</span>；</span><br><span class="line">      <span class="number">1.</span> gem install compass-<span class="built_in">normalize</span>  </span><br><span class="line">      <span class="number">2.</span> require 'compass-<span class="built_in">normalize</span>'</span><br></pre></td></tr></table></figure>
</li>
<li><p>叹号使用</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果将config.rb配置文件中设置  output_style = <span class="symbol">:compressed</span> 生成的压缩css文件中的注释会被删除，如何防止注释被删除？在注释的开头加<span class="string">"!"</span>，则注释会保留，即使设置了 output_style = <span class="symbol">:compressed</span>。</span><br></pre></td></tr></table></figure>
</li>
<li><p>常用图片可以转换成base64,减少图片请求</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">缺点:多消耗<span class="number">50</span>%的资源，多使用<span class="number">4</span>倍内存,不知道ie6，<span class="number">7</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>资料<br><a href="http://www.ruanyifeng.com/blog/2012/11/compass.html" target="_blank" rel="external">Compass用法指南</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="知识点">知识点</h3><ol>
<li>require ‘compass/import-once/activate’<figure class="highlight coffeescript"><table><tr><td class="gutter"><pr]]>
    </summary>
    
      <category term="css" scheme="http://willnewii.github.io/tags/css/"/>
    
      <category term="前端" scheme="http://willnewii.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sass笔记]]></title>
    <link href="http://willnewii.github.io/20151228/sacc/"/>
    <id>http://willnewii.github.io/20151228/sacc/</id>
    <published>2015-12-28T07:08:00.000Z</published>
    <updated>2016-01-05T13:20:33.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Sass_和_SCSS">Sass 和 SCSS</h3><p>其实是同一种东西，我们平时都称之为Sass，两者之间不同之处有以下两点：</p>
<ol>
<li><p>文件扩展名不同，Sass是以“.sass”后缀为扩展名，而 SCSS 是以“.scss”后缀为扩展名</p>
</li>
<li><p>语法书写方式不同，Sass是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，而 SCSS的语法书写和我们的 CSS 语法书写方式非常类似。</p>
</li>
<li><p>Sass 和 CSS 写法的确存在一定的差异，由于 Sass 是基于 Ruby 写出来，所以其延续了 Ruby 的书写规范。在书写 Sass 时不带有大括号和分号，其主要是依靠严格的缩进方式来控制的</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">body</span></span><br><span class="line">     <span class="attribute">color</span>: <span class="hexcolor">#fff</span></span><br><span class="line">     <span class="attribute">background</span>: <span class="hexcolor">#f36</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>SCSS 和 CSS 写法无差别，这也是 Sass 后来越来越受大众喜欢原因之一。简单点说，把你现有的“.css”文件直接修改成“.scss”即可使用。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">body</span><span class="rules">&#123;</span><br><span class="line">     <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">     <span class="rule"><span class="attribute">background</span>:<span class="value"><span class="hexcolor">#f36</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="Scss编译网站">Scss编译网站</h3><p><a href="http://www.sassmeister.com/" target="_blank" rel="external">http://www.sassmeister.com/</a></p>
<h3 id="知识点">知识点</h3><ol>
<li><p>普通变量和默认变量</p>
<ol>
<li><p>普通变量定义后可以全局范围使用.</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fontSize</span>:<span class="number">12</span>px;</span><br></pre></td></tr></table></figure>
</li>
<li><p>默认变量一般是用来设置默认值，然后根据需求来覆盖的，覆盖的方式也很简单，只需要在默认变量之前重新声明下变量即可。</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$baseLineHeight</span>: <span class="number">1.5</span> !<span class="keyword">default</span>;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>混合宏 @mixin @includ      &amp;父类选择 hover</p>
<ol>
<li><p>默认值</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@mixin border-radius(<span class="variable">$radius</span>:<span class="number">3</span>px)&#123;</span><br><span class="line">    -webkit-border-radius: <span class="variable">$radius</span>;</span><br><span class="line">    border-radius: <span class="variable">$radius</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>多参数</p>
</li>
</ol>
</li>
<li><p>继承 @extend</p>
<ol>
<li>不能继承选择器序列</li>
</ol>
</li>
<li><p>占位符 %placeholder</p>
</li>
<li><p>混合宏 VS 继承 VS 占位符</p>
<ol>
<li>如果在样式文件中调用同一个混合宏，会产生多个对应的样式代码，造成代码的冗余，这也是 CSSer 无法忍受的一件事情。不过他并不是一无事处，他可以传参数。<strong>如果你的代码块中涉及到变量，建议使用混合宏来创建相同的代码块。</strong></li>
<li>使用继承后，编译出来的 CSS 会将使用继承的代码块合并到一起，通过组合选择器的方式向大家展现。<strong>如果你的代码块不需要专任何变量参数，而且有一个基类已在文件中存在，那么建议使用 Sass 的继承。</strong></li>
<li>“占位符是独立定义，不调用的时候是不会在 CSS 中产生任何代码；继承是首先有一个基类存在，不管调用与不调用，基类的样式都将会出现在编译出来的 CSS 代码中。”<br><img src="/img/混合宏vs继承vs占位符.jpg" alt="混合宏 VS 继承 VS 占位符">  </li>
</ol>
</li>
<li><p>插值语句 #{ }</p>
</li>
<li><p>注释</p>
<ol>
<li>/<em>显示</em>/        </li>
<li>//不显示</li>
</ol>
</li>
<li><p>计算</p>
<ol>
<li><p>加减乘除</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$list</span>: twitter,facebook,github,weibo;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">for</span> <span class="variable">$i</span> from <span class="number">1</span> through length(<span class="variable">$list</span>)&#123;</span><br><span class="line">  .icon-#&#123;nth(<span class="variable">$list</span>,<span class="variable">$i</span>)&#125;&#123;</span><br><span class="line">    background-postion: <span class="number">0</span>+<span class="number">20</span>px * <span class="variable">$i</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">/*除法*/</span><br><span class="line">p &#123;</span><br><span class="line">  font: <span class="number">10</span>px/<span class="number">8</span>px;             // 纯 CSS，不是除法运算</span><br><span class="line">  <span class="variable">$width</span>: <span class="number">1000</span>px;</span><br><span class="line">  width: <span class="variable">$width</span>/<span class="number">2</span>;            // 使用了变量，是除法运算</span><br><span class="line">  width: round(<span class="number">1.5</span>)/<span class="number">2</span>;        // 使用了函数，是除法运算</span><br><span class="line">  width: <span class="number">100</span>px / <span class="number">2</span>;           // 编译结果：<span class="number">100</span>px / <span class="number">2</span></span><br><span class="line">  height: (<span class="number">500</span>px/<span class="number">2</span>);          // 使用了圆括号，是除法运算</span><br><span class="line">  margin-left: <span class="number">5</span>px + <span class="number">8</span>px/<span class="number">2</span>px; // 使用了加（+）号，是除法运算</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>颜色运算 <strong>所有算数运算都支持颜色值，并且是分段运算的。也就是说，红、绿和蓝各颜色分段单独进行运算。</strong></p>
</li>
<li>字符串计算  <figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"Hello"</span> + <span class="string">""</span> + <span class="string">"Sass!"</span>;   ==  <span class="string">" Hello Sass! "</span></span><br><span class="line">e + -<span class="built_in">resize</span>;              ==  e-<span class="built_in">resize</span>;</span><br><span class="line"><span class="string">"Foo "</span> + Bar;             ==  <span class="string">"Foo Bar"</span></span><br><span class="line">sans- + <span class="string">"serif"</span>;          ==  sans-serif;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ol>
<ol>
<li>@at-root @if type_of unitless  等操作符<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@mixin col-sm(<span class="variable">$width</span>: <span class="number">50</span>%) &#123;</span><br><span class="line">  @if type_of(<span class="variable">$width</span>) != number &#123;</span><br><span class="line">    @error <span class="string">'$width必须是一个数据类型,你输入的width是:#&#123;$width&#125;.'</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @if not unitless(<span class="variable">$width</span>)&#123;</span><br><span class="line">    @if unit(<span class="variable">$width</span>) != <span class="string">'%'</span>&#123;</span><br><span class="line">      @error  <span class="string">'$width必须是一个百分值,你输入的width是:#&#123;$width&#125;.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;@else &#123;</span><br><span class="line">    @warn  <span class="string">'$width应该是一个百分值,你输入的width是:#&#123;$width&#125;.'</span>;</span><br><span class="line">    <span class="variable">$width</span>: (percentage(<span class="variable">$width</span>)/<span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @media (min-width: <span class="number">768</span>px) &#123;</span><br><span class="line">    width: <span class="variable">$width</span>;</span><br><span class="line">    float: left;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="tips">tips</h3><ol>
<li>类名：应该有语义化的表现,而不是强调视觉性 </li>
</ol>
<p><a href="http://www.w3cplus.com/sassguide/syntax.html" target="_blank" rel="external">sass语法</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Sass_和_SCSS">Sass 和 SCSS</h3><p>其实是同一种东西，我们平时都称之为Sass，两者之间不同之处有以下两点：</p>
<ol>
<li><p>文件扩展名不同，Sass是以“.sass”后缀为扩展名，而 SCSS 是以“.scss”后缀为]]>
    </summary>
    
      <category term="css" scheme="http://willnewii.github.io/tags/css/"/>
    
      <category term="前端" scheme="http://willnewii.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Cordova笔记]]></title>
    <link href="http://willnewii.github.io/20151218/Cordova%E7%AC%94%E8%AE%B0/"/>
    <id>http://willnewii.github.io/20151218/Cordova笔记/</id>
    <published>2015-12-18T06:21:00.000Z</published>
    <updated>2016-02-16T03:03:56.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p>Push<br>push选用了jPush.因为貌似只有他们家只官方支持了Cordova.<br><a href="https://github.com/jpush/jpush-phonegap-plugin" target="_blank" rel="external">https://github.com/jpush/jpush-phonegap-plugin</a></p>
<ul>
<li>关于配置证书<br> <a href="https://leancloud.cn/docs/ios_push_cert.html" target="_blank" rel="external">iOS 推送证书设置指南 by LeanCloud</a><br>搜了很多文章,都把这个步骤写的异常玄乎.推荐LeanCloud的文档</li>
</ul>
</li>
<li><p>截图需求</p>
<ul>
<li>cordova有一个截图的插件暂时没用过,有需要的可以去看看<a href="https://github.com/gitawego/cordova-screenshot" target="_blank" rel="external">https://github.com/gitawego/cordova-screenshot</a></li>
</ul>
<ol>
<li><a href="https://html2canvas.hertzen.com/" target="_blank" rel="external">html2canvas</a> 可以根据元素来生成canvas对象,然后你在按需操作.</li>
</ol>
</li>
<li><p>canvas保存</p>
<ul>
<li><a href="http://blog.csdn.net/cuixiping/article/details/45932793" target="_blank" rel="external">DataURL与File,Blob,canvas对象之间的互相转换的Javascript</a></li>
</ul>
</li>
<li><p>目录结构</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string">____src</span><br><span class="line"></span>|<span class="string"> </span>|<span class="string">____css(由compass生成)</span><br><span class="line"></span>|<span class="string"> </span>|____iconfont</span><br><span class="line">|<span class="string"> </span>|____js</span><br><span class="line">|<span class="string"> </span>|<span class="string"> </span>|____controller</span><br><span class="line">|<span class="string"> </span>|<span class="string"> </span>|____services</span><br><span class="line">|<span class="string"> </span>|<span class="string"> </span>|____util</span><br><span class="line">|<span class="string"> </span>|____scss</span><br><span class="line">|<span class="string">____www</span><br><span class="line"></span>|<span class="string"> </span>|<span class="string">____dist(由gulp生成)</span><br><span class="line"></span>|<span class="string"> </span>|____img</span><br><span class="line">|<span class="string"> </span>|____templates</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>升级: cordova platform update ios@latest</p>
</li>
<li><p>cordova 升级4.0 问题<br><a href="https://github.com/jpush/jpush-phonegap-plugin/issues/111" target="_blank" rel="external">update_cordova_subproject command for cordova-ios 4.0.0-dev results in a build error</a></p>
</li>
</ul>
<ol>
<li>cofig.xml添加ios build编号<br>默认生成的config是没有ios build编号的.执行cordova build ios命令后,build和version 是相同的.<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">widget</span> <span class="attribute">id</span>=<span class="value">"io.cordova.hellocordova"</span></span><br><span class="line">	  <span class="attribute">version</span>=<span class="value">"0.0.1"</span> 				//版本号</span><br><span class="line">      <span class="attribute">android-versionCode</span>=<span class="value">"7"</span>	    //<span class="attribute">android</span> <span class="attribute">build</span></span><br><span class="line">      <span class="attribute">ios-CFBundleVersion</span>=<span class="value">"7"</span>		//<span class="attribute">ios</span>     <span class="attribute">build</span></span><br><span class="line">      <span class="attribute">windows-packageVersion</span>=<span class="value">"1.0.1.2"</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><a href="http://cordova.apache.org/docs/en/latest/config_ref/index.html#link-2" target="_blank" rel="external">http://cordova.apache.org/docs/en/latest/config_ref/index.html#link-2</a></p>
<ol>
<li><p>提交appstore会收到邮件“Missing push notification entitlement”的邮件<br><a href="http://stackoverflow.com/questions/26168713/cordova-app-that-doesnt-use-push-notifications-missing-push-notification-enti" target="_blank" rel="external">http://stackoverflow.com/questions/26168713/cordova-app-that-doesnt-use-push-notifications-missing-push-notification-enti</a></p>
</li>
<li><p><a href="http://stackoverflow.com/questions/20419574/saving-dataurlbase64-to-file-on-phonegap-android" target="_blank" rel="external">Saving dataURL(base64) to file on PhoneGap (android)</a></p>
</li>
<li><p><a href="http://victorblog.com/2012/12/20/make-angularjs-http-service-behave-like-jquery-ajax/" target="_blank" rel="external"> angular的post请求，后台接收参数为null的解决方案</a></p>
</li>
<li><p><a href="http://wex5.com/cn/?p=11382" target="_blank" rel="external">cordova插件清单</a></p>
</li>
</ol>
<h4 id="Angular">Angular</h4><ul>
<li><a href="https://github.com/angular-ui/ui-router/wiki" target="_blank" rel="external">ui-router wiki</a></li>
<li><a href="http://blog.csdn.net/yy374864125/article/details/43702153" target="_blank" rel="external">angular ui-router - 管理状态</a></li>
<li><a href="http://blog.jobbole.com/62249/" target="_blank" rel="external">AngularJS 指令实践指南</a></li>
</ul>
<h3 id="资料">资料</h3><p><a href="http://park.jobdeer.com/discussion/22/%E4%BD%BF%E7%94%A8-html2canvas-%E5%AE%9E%E7%8E%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%9B%BE%E5%B9%B6%E4%B8%8B%E8%BD%BD" target="_blank" rel="external">使用-html2canvas-实现浏览器截图并下载</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p>Push<br>push选用了jPush.因为貌似只有他们家只官方支持了Cordova.<br><a href="https://github.com/jpush/jpush-phonegap-plugin" target="_blank" rel="ex]]>
    </summary>
    
      <category term="前端" scheme="http://willnewii.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MayDay歌词本更新日志]]></title>
    <link href="http://willnewii.github.io/20151214/MayDay%E6%AD%8C%E8%AF%8D%E6%9C%AC%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/"/>
    <id>http://willnewii.github.io/20151214/MayDay歌词本更新日志/</id>
    <published>2015-12-14T14:11:00.000Z</published>
    <updated>2016-02-02T09:14:49.000Z</updated>
    <content type="html"><![CDATA[<h4 id="更新日志">更新日志</h4><h5 id="2016-02-01">2016.02.01</h5><ol>
<li>优化badge更新</li>
<li>歌词页有歌曲时播放问题</li>
<li>更新插件</li>
</ol>
<h5 id="2016-01-30">2016.01.30</h5><ol>
<li>fix 发布按钮无响应</li>
<li>新版图片存储切换至七牛</li>
<li>更新专辑图片资源至七牛</li>
<li>用户信息添加系统icon(ios/android)</li>
<li>回复列表,点击头像查看用户信息</li>
<li>终于…把喜欢列表给写了</li>
</ol>
<h5 id="2016-01-29">2016.01.29</h5><ol>
<li>fix badge初始值</li>
<li>修改wechat,weibo native代码–&gt;需发版</li>
</ol>
<h5 id="2016-01-21">2016.01.21</h5><ol>
<li>添加选取部分歌词生成图片分享</li>
</ol>
<h5 id="2016-01-18">2016.01.18</h5><ol>
<li>更新样式文件 fix大部分问题样式</li>
<li>添加切换主题功能</li>
<li>添加截图功能(开发中)</li>
</ol>
<h5 id="2015-12-25">2015.12.25</h5><ol>
<li>登陆页样式问题</li>
<li>个人信息页，收件箱加载问题</li>
<li>发送页面，内容换行后遮挡(5,5s,5c)</li>
<li>多次失败后，提示弹框不消失</li>
<li>优化发布页面按钮显示</li>
<li>发布时,添加加载框提示</li>
</ol>
<h5 id="2015-12-24">2015.12.24</h5><ol>
<li>圣诞主题发布</li>
<li>完善iconfont使用</li>
<li>index不能做UI处理</li>
<li>修复图片路径问题</li>
</ol>
<h5 id="2015-12-20">2015.12.20</h5><ol>
<li>修改我想说详情页 样式</li>
</ol>
<h5 id="2015-12-18">2015.12.18</h5><ol>
<li>更新ionic 1.2(未提交)</li>
</ol>
<h5 id="2015-12-17">2015.12.17</h5><ol>
<li>回复列表名称显示</li>
<li>回复后,android用户收不到推送(Server)</li>
</ol>
<h5 id="2015-12-16">2015.12.16</h5><ol>
<li>个人信息天数显示</li>
<li>长内容发送失败</li>
</ol>
<h5 id="2015-12-15">2015.12.15</h5><ol>
<li>关于页面样式(ipad样式有问题)</li>
<li>InAppBrowser调用bug</li>
<li>回复后自动刷新</li>
</ol>
<h5 id="2015-12-14">2015.12.14</h5><ol>
<li>整理设置页面</li>
</ol>
<h5 id="issue">issue</h5><ol>
<li>手机网络发送失败</li>
</ol>
<h5 id="待完善">待完善</h5><ol>
<li>签到日历</li>
<li>草稿箱</li>
<li><del>歌词页右上角菜单(评论/喜欢/)</del></li>
<li>登录流程,2次授权</li>
<li><del>登录引导对话框</del></li>
<li><del>歌词页面</del></li>
<li><del>badge需要重新登录才能更新状态</del></li>
<li><del>…我操…忘了…</del></li>
<li><del>更新提示(需要双击home键,杀死app后重新启动.)</del></li>
<li>添加登陆后自动更新状态接口.</li>
<li><a href="http://electron.atom.io/" target="_blank" rel="external">http://electron.atom.io/</a></li>
</ol>
<h3 id="android更新日志">android更新日志</h3><h5 id="2015_0122(2-2-4)">2015 0122(2.2.4)</h5><ul>
<li>修复 推送不能成功接收</li>
<li>动画类更换(未完成,先过年再说 o(≧v≦)o~~).</li>
</ul>
<h5 id="2015_0122(2-2-3)">2015 0122(2.2.3)</h5><ul>
<li>个人信息页面添加签到信息入口.(修复签到静态变量应用的bug);</li>
<li>修复 查看用户微博时,如果没有安装新浪微博不能打开浏览器的问题</li>
<li>修改 收信箱新消息提醒策略</li>
<li>添加 我想说分享功能(限制为自己的帖子)</li>
<li>添加收件箱功能.(之前的提醒看过就没有了,现在所有提醒会一直在收件箱中,以便查看历史记录).</li>
<li>修正当提醒(主贴是自己的)和回复(主贴是别人的)同时弹出提醒跳转页面错误的问题.</li>
<li>设置页面添加是否使用系统默认emoji表情选项.(有些系统会自定义一套emoji,如果你认为比app里的好看,你可以使用系统的.)</li>
<li>正式支持emoji表情.(//修改数据库相关字段为blob)</li>
<li>草稿箱添加长按删除.</li>
<li>修改我想说正文行间距,便于阅读.</li>
<li>修正了更新数据库,第一次进入看不到数据的问题.</li>
<li>添加更新签名.  (用户页面现在可以更新头像/更新个性签名)</li>
</ul>
<h5 id="1219(2-9-0)">1219(2.9.0)</h5><ul>
<li>优化注册登录流程</li>
<li>添加签到小功能.(据说以后会有小礼品…待定)</li>
<li>添加草稿箱功能.(看到一些小伙伴写那么那么长文,很是感动哇~ so,小伙伴们继续加油吧~)</li>
</ul>
<h5 id="1205">1205</h5><ul>
<li>修改背景模糊选项</li>
<li>修改歌词页背景选择大图后失败bug</li>
<li>修复新浪授权SSO方式失败问题</li>
<li>修复更新头像信息逻辑</li>
</ul>
<p>歌词模块</p>
<ul>
<li>全新的数据更新策略,专辑信息更新更灵活.</li>
<li>全新的歌词模块UI.歌词背景模糊特效,让背景图片更加贴合歌词.</li>
<li>主要页面支持侧滑退出.(如果你是MX,你又不喜欢用小光圈上划手势退出,这个你能用的上.)</li>
<li>重写歌词选取功能.不再有闪烁的小光标,更轻松的复制和分享.</li>
</ul>
<p>悬浮窗功能</p>
<ul>
<li>全新的悬浮窗功能模块,由之前单一的快捷方式改为可以支持App/联系人/快捷方式三种方式.</li>
</ul>
<p>其他</p>
<ul>
<li>新增博客模块,目前收集了阿信和石头的博客内容.(如果你有其他团员的文章数据,欢迎提供,特别是刚结婚那位的,个人超喜欢他的文笔)</li>
<li>头像支持修改.终于…终于…支持了.后续会添加更多用户信息元,可数据的修改.</li>
<li>支持图片发送,新版本中去除了板块选择,并开放了图片上传功能.</li>
<li>我想说图片浏览,支持大图浏览,并保存本地.so,多多分享和五月天有关的图片吧.</li>
</ul>
<h5 id="Tips">Tips</h5><ul>
<li>新的歌词本里需要用到读取联系人权限.用途为:在悬浮窗中添加联系人.如果你介意,现在大部分Android手机都有权限管理模块,关闭就是了,不影响其他功能的使用.</li>
<li><p>miui(不仅仅是小米用户,刷了miui rom应该都有这个可能)用户如果出现悬浮小人不能动的情况,可以在设置-》应用-》歌词本应用页面 将 “显示悬浮窗”选项开启即可.</p>
</li>
<li><p>悬浮框-“快捷方式”的使用.功能原理就是读取桌面上的所有快捷方式,比如你可以先将你经常使用到的微信联系人创建快捷方式到桌面,在使用在悬浮框的设置页面,读取桌面的快捷方式将你需要的内容添加到小阿信里面.</p>
</li>
</ul>
<h5 id="2-2-1">2.2.1</h5><ol>
<li>更新末日为明日/更新专辑封面。</li>
<li>67场演唱会数据补全。</li>
<li>演唱会签到功能。</li>
<li>个人信息页,添加信息汇总统计。</li>
<li>在歌词页直接进行字体设置。</li>
<li>推荐我想说/新增歌词提醒推送功能。</li>
<li>帮助页添加手动检测版本/和网盘链接(如果升级功能不能正常下载,可以自行至网盘进行下载。)</li>
<li>头像缓存文件不再显示(请删除之前的文件)。</li>
<li>增量更新功能。</li>
</ol>
<h5 id="2-1">2.1</h5><ol>
<li>长按悬浮框可更换其他图案.增加了悬浮框的稳定性.</li>
<li>修改歌词页UI.新增“我喜欢”按钮.</li>
<li>添加歌词页歌词切换动画</li>
<li>修改”最佳作词人”排列顺序.</li>
<li>个人信息页UI修改. 点击个人信息可产看自己的我想说.</li>
<li>回复自己的背景色区分</li>
<li>分享</li>
<li>字体设置移到歌词页</li>
<li>地理位置彩蛋</li>
<li>增量更新</li>
</ol>
<h5 id="2-0">2.0</h5><ol>
<li>修改分类页面  更换为ListView 形式.(周一)</li>
<li>排行榜页面.  跳转至歌词页.   (1,23, 用图片？)(周一)</li>
<li>个人信息页,添加”我想说”</li>
<li>个人页 布局 </li>
<li>个人页/侧滑菜单使用圆形头像</li>
<li>小悬浮框 雅安加油</li>
<li>bginfo /悬浮框 添加url属性.  逻辑:url非空,点击动作为跳转至url</li>
<li>发布页面,去除歌单功能/添加回复页相同表情动画.</li>
<li>修改获取状态栏高度位置. onTouch时触发</li>
</ol>
<h5 id="1-9-0">1.9.0</h5><ol>
<li>分类页面 ListView动画效果实现</li>
<li>检测喜欢歌词页面  更多实现.  UI、信息显示的完善</li>
<li>排行榜页 </li>
<li>闽南 图标</li>
<li>歌词页</li>
<li>选词功能实现</li>
</ol>
<h5 id="1-8-0">1.8.0</h5><ol>
<li>直接调用微博客户端登陆.SSO</li>
<li>检查快捷方式不稳定. </li>
<li>快捷方式图片选择Grid</li>
<li>歌词翻转效果</li>
<li>修改ActionBar 背景色</li>
<li>使用prefrence 保存快捷方式位置.</li>
<li>根据所选歌词掉落相关图片彩蛋</li>
<li>点击发送弹出分类选择.</li>
</ol>
<h5 id="1-7-0">1.7.0</h5><ol>
<li>微博登录</li>
<li>多用户选择</li>
<li>回复自己的用蓝色标记.</li>
<li>我想说列表滑动到底部自动加载.(去除之前还要按一下”加载更多”)</li>
<li>桌面的’小阿信’希望在你们的手机上效果还好,你们能喜欢. 类似快捷方式的模块,位置可以自由拖动.默认是打开歌词本,当然你也可以在设置中,选择其他应用,比如微博/QQ等.</li>
<li>类似微信的小彩蛋.</li>
<li>明日场次已经添加.</li>
<li>搜索排序.其他歌词放置最后.</li>
<li>《天机》之前给忘了,已经添加.</li>
</ol>
<h5 id="1-6-0">1.6.0</h5><ol>
<li>我们模块,刷新后,bitmap的回收。</li>
<li>添加”我们” 分页加载.</li>
<li>添加 板块   导航</li>
<li>诺亚方舟 （倒计时程序）</li>
<li>修改网络加载模块</li>
</ol>
<h5 id="1-5-0">1.5.0</h5><ol>
<li>新的侧滑菜单UI.用户相关操作请点击用户名.</li>
<li>新增的”我们”模块.</li>
<li>个人信息页,增加更新地理位置信息.提交地理位置后会在”我们”模块中显示.(如果你介意位置信息,请不要点.~)</li>
<li>新启动画面.以后可以使用用户提交的图片来做启动画面.(欢迎大家踊跃提交喽~)</li>
<li>完整的”夜用型”配色,各种不侧漏,晚上随你怎么用.</li>
<li>调整了缓存文件夹.</li>
<li>优化之前刷新崩溃的问题.(貌似没有彻底解决,但是应该会好些.)</li>
<li>优化提醒结构.超过三分钟无效提醒,将自动清除.</li>
<li>优化”我想说”的布局,虽然依然是坨屎…</li>
<li>优化标签的显示效果.</li>
</ol>
<h5 id="1-3-9">1.3.9</h5><ol>
<li>用户信息页  </li>
<li>提示定位信息(歌词本用户可以在地图上看到你.PS:如果你介意地理信息暴露,可以微博@我,哪个市也好,该功能只是为了玩,没别的意思.)</li>
</ol>
<h5 id="1-3-8">1.3.8</h5><p>//完成</p>
<ul>
<li>我想说 标签（默认贴/生日贴/笑话贴/晚安贴/连线贴（发号码可直接跳转拨号））</li>
<li>创建歌单</li>
<li>下拉刷新 </li>
<li>用户信息页,查看用户发帖接口</li>
<li>歌词页,查看该歌曲我想说接口</li>
<li>好友关系异常,跳转授权页提示绑定.</li>
<li>根据标签区分颜色(效果不明显,通过前缀代替)</li>
<li>整理专辑图片(200*200)<br>//修改</li>
<li>演唱会坐标</li>
<li>图片浏览</li>
</ul>
<p>等待图/下载异常</p>
<ul>
<li>Map气泡处理</li>
<li>演唱会倒数天数异常</li>
<li>全局亮度调节<br>//优化</li>
<li>歌单排序部分代码完善</li>
<li>Item中歌单 内容  进行编辑<br>bug:</li>
<li>修改Item 宽度,点击title事件</li>
<li>刷新</li>
</ul>
<h5 id="1-3-7">1.3.7</h5><p>新的分享模块.支持带图片的微博和直接@好友.<br>增加个人信息页.右上角,点击自己的用户名可查看.目前仅支持编辑自我描述.(性别和头像均来自新浪微博.). 所以,请先登录歌词本后在进行新浪授权.<br>我想说头像显示. 点击头像可以查看该用户信息(默认性别为女.) 没头像的,可以点击用户名进行查看.<br>如果该用户绑定新浪微博,支持在应用内直接加关注.<br>搜索支持歌名搜索.<br>我想说UI做了一点点小调整.<br>新图标,更换未遂…</p>
<h5 id="1-3-6">1.3.6</h5><ol>
<li>修改HeadItem  Bug</li>
<li>添加倒计时天数</li>
<li>支持发表情</li>
<li><p>支持Html代码</p>
</li>
<li><p>屏幕亮度调节</p>
</li>
<li>关于页添加说明文档</li>
<li>是否添加’我想说’随意发帖</li>
<li>继续完善Activity跳转动画.</li>
<li>提醒(铃音/震动)</li>
<li>翻页可行性.</li>
</ol>
<h5 id="1-3-5">1.3.5</h5><p>Update:</p>
<ol>
<li>‘我想说’回复提醒功能.</li>
<li>点击用户的留言,可以对该用户进行回复.</li>
<li>歌词字体自定义功能. </li>
<li>歌词页常亮.<br>Bug:</li>
<li>繁体无法正常使用搜索功能.</li>
<li>显示注音时,无简繁体切换.</li>
<li>回复列表拖动时’黑块’.</li>
<li>当回复内容过长时,内容被省略.</li>
<li>当主题内容过长,可能造成部分机型无法拖动回复列表或遮盖.</li>
<li>部分机型可能出现输入界面字体与背景色混淆看不清输入内容.</li>
</ol>
<ul>
<li>说明:<ul>
<li>自定义字体功能:<br>请将你喜欢的字体更名为def.ttf 放置SD中 mayday/font/ 目录下.并在设置页勾选即可.<br><em>:当使用自定义字体,并选择显示繁体时,可能会出现字体显示不完整,与歌词本无关,切换一个完整字体即可.
</em>:部分字体可能显示不便于阅读,可能尝试勾选显示粗体进行微调.</li>
<li>‘我想说’提醒功能:<br>目前正处于提醒功能的第一版,可能会出现提示的内容有偏差,或错误.如果你有耐心,可能将Bug告知咸鱼,帮咸鱼完善我想说. 如果没有,可以在设置页面勾选关闭提醒,以免影响你的正常使用.</li>
</ul>
</li>
</ul>
<h5 id="1-3-2">1.3.2</h5><ol>
<li>地图</li>
<li>“我想说”回复功能</li>
<li>闽南语歌词拼音转换</li>
<li>新UI  左上角 点击可以直接退出.</li>
</ol>
<h5 id="1-3-1">1.3.1</h5><ol>
<li>更新歌曲接口/根据ID  inster操作.</li>
<li>修改 联合添加 +1的操作.</li>
<li>发布者  高亮显示</li>
<li>字数限制,过长用…表示.  添加详细页Activity.</li>
<li>rootid  （回复内容）</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="更新日志">更新日志</h4><h5 id="2016-02-01">2016.02.01</h5><ol>
<li>优化badge更新</li>
<li>歌词页有歌曲时播放问题</li>
<li>更新插件</li>
</ol>
<h5 id="2016-01-3]]>
    </summary>
    
      <category term="MayDay歌词本" scheme="http://willnewii.github.io/tags/MayDay%E6%AD%8C%E8%AF%8D%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[appStore 大坑逼]]></title>
    <link href="http://willnewii.github.io/20151209/appStore%20%E5%A4%A7%E5%9D%91%E9%80%BC/"/>
    <id>http://willnewii.github.io/20151209/appStore 大坑逼/</id>
    <published>2015-12-09T14:45:00.000Z</published>
    <updated>2015-12-15T15:48:03.000Z</updated>
    <content type="html"><![CDATA[<h3 id="14-3_Details">14.3 Details</h3><p>Your app enables the display of user-generated content but does not have the required precautions in place.</p>
<p>Next Steps</p>
<p>It is necessary that you put all of the following precautions in place:</p>
<ul>
<li>Require that users agree to terms (EULA) and these terms must make it clear that there is no tolerance for objectionable content</li>
<li>Use moderators to flag and remove inappropriate content and offensive users</li>
<li>Users need a mechanism to block abusive users (for example: 用户黑名单)</li>
<li>Developer must act on objectionable content reports within 24 hours by removing the content and ejecting the user who provided the offending content</li>
<li>Developer needs a method for ejecting users who violate the terms of the EULA</li>
</ul>
<blockquote>
<p>添加举报功能.杯具…说是没有用户协议,类似告知用户那些是不可以做的版规.又杯具,说是还要一个黑名单功能.这些不一定要后台实现的…假的也行.</p>
</blockquote>
<h3 id="8-5_Details">8.5 Details</h3><p>We found that your app includes lyrics which may be copyrighted. The use of third-party copyrighted materials requires documented evidence of your right to use such content in your app.</p>
<p>Next Steps</p>
<p>Please provide documentary evidence of rights to use this content. Once Legal has reviewed your documentation and confirms its validity, we will proceed with the review of your app.</p>
<blockquote>
<p>使用了第三方内容,需要授权文件</p>
</blockquote>
<h3 id="22-2_Details">22.2 Details</h3><p>Your app or its metadata contains misleading content. Specifically, your app name misleads the user this app containing lyrics info.</p>
<p>Next Steps</p>
<p>Please remove or revise any misleading content in your app and its metadata.</p>
<blockquote>
<p>因为应用提供歌词内容，但是歌词属于使用第三方内容需要授权,所以只能拿掉.拿掉以后说我的名称与内容不符,误导用户,所以只能更换应用名称.</p>
</blockquote>
<h3 id="17-2_Details">17.2 Details</h3><p>In addition, we noticed that your app requires users to register with personal information to access non account-based features. Apps cannot require user registration prior to allowing access to app content and features that are not associated specifically to the user.</p>
<p>Next Steps</p>
<p>User registration that requires the sharing of personal information must be optional or tied to account-specific functionality. Additionally, the requested information must be relevant to the features.</p>
<blockquote>
<p>因为应用有注册模块,需要填写性别.但是他们又没发现哪里有用到性别的地方,于是乎他们就认为你收集用户信息(性别).</p>
</blockquote>
<p>We noticed that your app uses Sina Weibo login for authentication purposes but does not include account-based features offered by that site, which does not comply with the App Store Review Guidelines.</p>
<p>In order to use Sina Weibo for authentication, your app must include significant account-specific functionality from Sina Weibo. For example, your app should include sufficient account-based features from Sina Weibo other than pulling profile information or sharing on the user’s page.</p>
<p>Next Steps</p>
<p>Please revise your app to implement your own authentication mechanism, or incorporate significant account-specific functionality from Sina Weibo. </p>
<blockquote>
<p>使用微博账号当作系统账号使用.杯具了…这个是不允许的。你要么有自己创建用户名和密码体系，要么使用第三方账号认证后，在app内明确提供该第三方的其它基于账号的功能。换句话说，第三方认证只能帮你做认证关联，不能直接挖掘用户信息作为你的app的账户。这会让Apple认为你无故暴露用户隐私。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="14-3_Details">14.3 Details</h3><p>Your app enables the display of user-generated content but does not have the required precautions ]]>
    </summary>
    
      <category term="ios" scheme="http://willnewii.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[cordova & ionic & angularJs]]></title>
    <link href="http://willnewii.github.io/20151207/cordova/"/>
    <id>http://willnewii.github.io/20151207/cordova/</id>
    <published>2015-12-07T09:46:00.000Z</published>
    <updated>2016-04-14T11:36:23.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li>cofig.xml添加ios build编号<br>默认生成的config是没有ios build编号的.执行cordova build ios命令后,build和version 是相同的.<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">widget</span> <span class="attribute">id</span>=<span class="value">"io.cordova.hellocordova"</span></span><br><span class="line">	  <span class="attribute">version</span>=<span class="value">"0.0.1"</span> 				//版本号</span><br><span class="line">      <span class="attribute">android-versionCode</span>=<span class="value">"7"</span>	    //<span class="attribute">android</span> <span class="attribute">build</span></span><br><span class="line">      <span class="attribute">ios-CFBundleVersion</span>=<span class="value">"7"</span>		//<span class="attribute">ios</span>     <span class="attribute">build</span></span><br><span class="line">      <span class="attribute">windows-packageVersion</span>=<span class="value">"1.0.1.2"</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><a href="http://cordova.apache.org/docs/en/latest/config_ref/index.html#link-2" target="_blank" rel="external">http://cordova.apache.org/docs/en/latest/config_ref/index.html#link-2</a></p>
<ol>
<li>提交appstore会收到邮件“Missing push notification entitlement”的邮件<br><a href="http://stackoverflow.com/questions/26168713/cordova-app-that-doesnt-use-push-notifications-missing-push-notification-enti" target="_blank" rel="external">http://stackoverflow.com/questions/26168713/cordova-app-that-doesnt-use-push-notifications-missing-push-notification-enti</a><br><strong>需要重新生成一下provisioning，选择的AppID中需要包含Push Notifacation的，用生成的provisioning再重新Archive就好了</strong></li>
<li><p><a href="http://stackoverflow.com/questions/20419574/saving-dataurlbase64-to-file-on-phonegap-android" target="_blank" rel="external">Saving dataURL(base64) to file on PhoneGap (android)</a></p>
</li>
<li><p><a href="http://victorblog.com/2012/12/20/make-angularjs-http-service-behave-like-jquery-ajax/" target="_blank" rel="external"> angular的post请求，后台接收参数为null的解决方案</a></p>
</li>
<li><p><a href="http://codepen.io/DaDanny/pen/ojQEox" target="_blank" rel="external">ionic 文本选择</a></p>
</li>
<li><p>ionic $ionicview生命周期</p>
<ul>
<li>$ionicView.loaded<br><br>视图已经被加载了。这事件只发生一次当视图被创建并添加到Dom中。当跳出页面并且被缓存了的话，再次访问这个页面时这个时间将不会被激活。Loaded事件是个好方式让你为这个视图设置你的代码； 然而，他并不是我们推荐的时间去监听视图被激活。</li>
<li>$ionicView.enter<br><br>进入视图并被激活。这事件被激活来判断这个视图是第一个加载还是被缓存了的。</li>
<li>$ionicView.leave<br><br>离开这个视图并且不是活动页面。调用这个事件判断应该被缓存还是摧毁。</li>
<li>$ionicView.beforeEnter<br><br>视图即将被打开变成活动页面。</li>
<li>$ionicView.beforeLeave<br><br>视图将被关闭并且不是活动页面。</li>
<li>$ionicView.afterEnter<br><br>进入视图并是当前的活动页面</li>
<li>$ionicView.afterLeave<br><br>已经离开视图，并成为非激活页面</li>
<li>$ionicView.unloaded<br><br>视图的Controller已经被摧毁并且他的页面元素也从Dom中移除</li>
</ul>
</li>
<li><p><a href="http://bubkoo.com/2014/01/02/angular/ui-router/guide/url-routing/" target="_blank" rel="external"><br>学习 ui-router - 路由控制</a></p>
</li>
<li><p>state 设置 cache<br> 开发过程中会遇到某些页面重复使用的情况.比如用户信息页. 当我打开了两个用户页面,就是出现element错乱,本来想过去当前页面的,却获取更早的页面.对复用性高的,可以将其缓存关闭.</p>
</li>
<li><p><a href="http://www.gajotres.net/using-views-events-to-create-javascript-pure-ionic-splash-screen/" target="_blank" rel="external">自定义启动页面(未验证)</a></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li>cofig.xml添加ios build编号<br>默认生成的config是没有ios build编号的.执行cordova build ios命令后,build和version 是相同的.<figure class="highlight xml"><table]]>
    </summary>
    
      <category term="cordova" scheme="http://willnewii.github.io/tags/cordova/"/>
    
      <category term="ionic" scheme="http://willnewii.github.io/tags/ionic/"/>
    
      <category term="前端" scheme="http://willnewii.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
